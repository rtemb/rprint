image: golang:1.7

variables:
  APP: receipt-print
  USERSPACE: rtemb
  REPO_NAME: gitlab.com/USERSPACE/APP
  RELEASE: 0.0.1
  GOOS: linux
  SERVICE_PORT: 8081
  CONTAINER_NAME: USERSPACE/APP
  COMMIT: git-$(shell git rev-parse --short HEAD)
  REPO_INFO: $(shell git config --get remote.origin.url)


before_script:
  - go version
  - echo $CI_BUILD_REF
  - echo $CI_PROJECT_DIR
  - go get -u github.com/Masterminds/glide
  - glide install

stages:
  - formating
  - build
  - test

format-sources:
  stage: formating
  script: 
    - go vet $(shell go list $PROJECT/... | grep -v vendor)
    - go list -f '{{if len .TestGoFiles}}"gofmt -s -l {{.Dir}}"{{end}}' $(shell go list ${PROJECT}/... | grep -v vendor) | xargs -L 1 sh -c


test-project:
  stage: test
  script:
    - mkdir -p $GOPATH/src/$REPO_NAME
    - mv $CI_PROJECT_DIR/* $GOPATH/src/$REPO_NAME
    - cd $GOPATH/src/$REPO_NAME
    - go test -v -race $(go list ./... | grep -v /vendor/)

build-project:
  stage: build
  script:
    - mkdir -p $GOPATH/src/$REPO_NAME
    - mv $CI_PROJECT_DIR/* $GOPATH/src/$REPO_NAME/
    - mkdir -p $CI_PROJECT_DIR/artifacts
    - cd $GOPATH/src/$REPO_NAME
    - go build 